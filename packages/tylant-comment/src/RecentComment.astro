---
import type { BlogComment, CommentHost } from "..";

interface Props extends CommentHost {
  kCommentList: BlogComment[];
}

const { kCommentList, renderComment } = Astro.props;
const comments = kCommentList.sort(
  (a, b) => b.createdAt.valueOf() - a.createdAt.valueOf()
);
const recent5Comments = comments.slice(0, 5);
---

<section aria-label="Recent Comments">
  <h2>Recent Comments</h2>
  <ul class="block-list comments">
    {
      recent5Comments.map(async (comment) => (
        <li class="comment-item">
          <div class="comment-head">
            <strong class="name">{comment.email}</strong> on
            <Fragment
              set:html={await Astro.slots.render("articleRef", [
                comment.articleId,
              ])}
            />
            <em>
              at
              <time>{new Date(comment.createdAt).toLocaleString()}</time>
            </em>
          </div>
          <span class="title" set:html={renderComment(comment.content)} />
        </li>
      ))
    }
  </ul>
</section>
